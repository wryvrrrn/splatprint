general:
- set up command line switches
- set up pip and github
- set up demo folder (normal and inverse test images, macro preview, in-game screenshot (first pass), repair macro preview, in-game screenshot (second pass))
- save flag? only takes screenshot image, outputs to a png (for editing a post that you've drawn in-game)

__main__.py:
- proper CLI argument setup
- validate arguments for save mode (although ignoring them just works well enough tbh)
- depending on CLI implementation, have a separate input for save mode? later just make rprimg = saveimg if save == True though

README:
- pip installation command
- demonstration: normal or inverse preview, in-game screenshot (first pass), repair macro preview (if applicable), second pass (if applicable)

macropreview.py: (low priority)
- have skip color adapt to bg color on repair
- for fast mode
	overlaps for cursor path
	first pass blue;
	then, if blue and cursor input on pixel, change to red (second pass color)
	if red and cursor input on pixel, change to green
	shouldn't have more than 3 overlapped pixels though
	store A + B inputs in a separate array, overlay with Pillow? (adjustable transparency)