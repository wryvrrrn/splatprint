general:
- set up demo folder (with actual legit images)
- eventually: proper pathfinding algorithm for simpler lineart? not enabled by default
	sort image into blobs (blob detection?), then calculate distance between blobs? enter and exit a blob mid-way? (split a blob into chunks based on surrounding ones?)
	main thing is that print path within a blob (a fully inked block) really doesn't matter as long as there aren't any overlaps (or pathing over unnecessary "visited" pixels)

README:
- repair mode demo, maybe?

macropreview.py: (vanity, low priority (probably won't implement tbh))
- have skip color adapt to bg color on repair
- for fast mode
	overlaps for cursor path
	first pass blue;
	then, if blue and cursor input on pixel, change to red (second pass color)
	if red and cursor input on pixel, change to green
	shouldn't have more than 3 overlapped pixels though
	store A + B inputs in a separate array, overlay with Pillow? (adjustable transparency)